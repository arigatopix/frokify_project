# โครงสร้าง
  devDependencies
    คือ tool package ที่ใช้เฉพาะตอน development
    - webpack : bundle file
    # npm install webpack --save-dev 
    - barbel : transpile to ES5

  Dependencies ไม่ต้องมีคำว่า --save 
    ใช้กับ code ใน project เรา เช่น react ใช้ตอน web run อยุ่

  package สามารถไป run install dependencies อัตโนมัติได้ โดยต้องมี package.jason ในโฟลเดอร์แล้วพิมพ์ npm install ก็จะได้ node-module ทั้งโฟลเดอร์

  วิธีลบ (uninstall)
    # npm uninstall (package name)

  Global install package
    # npm install live-server --global

# Webpack รวม js, css, jpg to static folder
  entry point output loader plugin

  webpack.config.js
  - path: path.resolve(__dirname, 'dist'), คือปลายทาง ที่จะมีไฟล์ js, html, css บรรจุอยู่
  - production mode reduce file bundle size
  - development mode

  -plug in 
    # npm install webpack-plugin เพื่อ config html file
      จะสร้างไฟล์ html อัตโนมัติ 
      *** ใหม่
      https://webpack.js.org/plugins/html-webpack-plugin/

  -webpack-cli
    - start : จะ run background ตอน dev  --open คือเปิด page อัตโนมัติ จะ runserver อัตโนมัติ
    - dev
    - build = 

  -webpack-dev-server เอาไว้ run ตอน develop auto reload page
    - contentBase : คือ webpack serve file ตอนเซฟ

  -babel / loaders คือให้จัดการบางไฟล์ที่เราต้องการ เช่น ES6 > ES5 หรือ SCSS เป็น CSS

# src = source code ที่เราจะ dev, dist = distribute คือ folder ปลายทาง



# package.jason
  - script คือ run npm แล้วจะเรียก webpack ขึ้นมา แล้วจะทำการ export output
  # npm run dev

  - webpack-cli มีเพื่อ interface command line


. current folder
.. parent folder


// Import export

- EXPORT 
export const add = (a, b) => a + b;

- IMPORT 
import str from './models/Search';
// import { add, multiply, ID } from './views/searchView';
// import { add as a, multiply as m, ID as id } from './views/searchView';
import * as searchView from './views/searchView';
console.log(str);

// console.log(`Using imported function ${add(ID, 2)} and ${multiply(3, 5)}`);
// console.log(`Using imported function ${a(id, 2)} and ${m(3, 5)}`);

console.log(
  `Using imported function ${searchView.add(
    searchView.ID,
    2
  )} and ${searchView.multiply(3, 5)}`
);
